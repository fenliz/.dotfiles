#!/usr/bin/env bash

# Get git root directory
git_root=$(git rev-parse --show-toplevel)

# package_json=$(find $git_root -name "package.json" -not -path "*/node_modules/*" | fzf -0)

# 1. Find and get content of all package.json files in git repository
# 2. Get all scripts within the package.json files
# 3. Pick a script to run

# find $git_root -name "package.json" -not -path "*/node_modules/*" -exec cat {} + \

# Get name and scripts of all package.json files in git repository
package_json_content=$( \
      find $git_root -name "package.json" -not -path "*/node_modules/*" -exec cat {} + \
    | jq '{name: .name, scripts: .scripts}' \
)

# Pick a script amongst all available in the package.json files
script=$(\ 
      echo $package_json_content \
    | jq '
        select(.scripts!=null) 
        | . as $root 
        | .scripts 
        | to_entries[] | "\(.key) (\($root.name)): \(.value)"
     ' \
    | fzf \
)

echo $package_json_content
echo ""
echo $script


# script=$( \
#       find $git_root -name "package.json" -not -path "*/node_modules/*" -exec cat {} + \
#     | jq '
#         select(.scripts!=null) 
#         | . as $root 
#         | .scripts 
#         | to_entries[] | "\(.key) (\($root.name)): \(.value)"
#     ' \
#     | fzf)

# # Get directory of chosen package json
# package_json_folder=$(echo $package_json | awk -F 'package.json' '{print $1}')

# script=$( \
#     find $git_root -name "package.json" -not -path "*/node_modules/*" -exec cat {} + \
#     | jq 'select(.scripts!=null) | .scripts' \
#     | sed '1d;$d' \
#     | fzf -0
# )

# # Get all package.json files and pick one
# package_json=$(find $git_root -name "package.json" -not -path "*/node_modules/*" | fzf -0)
# if [[ -z "$package_json" ]]; then
#     exit 1
# fi

# # Get directory of chosen package json
# package_json_folder=$(echo $package_json | awk -F 'package.json' '{print $1}')

# # Pick what script to run from the package.json
# script=$(cat $package_json | jq .scripts | sed '1d;$d' | fzf)

# # Extract script name
# script_name=$(echo $script | awk -F ': ' '{gsub(/"/, "", $1); print $1}')

# # Use yarn if installed but fallback to npm
# if hash yarn 2> /dev/null; then
#     command="yarn run --cwd $package_json_folder $script_name | less"
# else
#     command="npm run --prefix $package_json_folder $script_name | less"
# fi

# # Run command
# tmux split-window "$command"
